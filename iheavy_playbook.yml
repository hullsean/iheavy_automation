#
# configure iheavy.com server with relevant packages
# after terraform finishes the provisioning process
#
# need to add support for Yoast SEO plugin
#
---
- hosts: all
  become: yes

  tasks:
  - name: install php-dom
    yum: name=php-dom state=latest

  - name: install aws-cli
    yum: name=aws-cli state=latest

  - name: install wp-cli
    shell: curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    args:
      chdir: /root
      creates: wp-cli.phar

  - name: creates wpbackup dir
    file: path=/tmp/wpbackups state=directory

# weekly backups using the wordpress cli export
  - cron:
      name=make_wp_backup 
      minute=0
      hour=22
      weekday=2
      job="php /root/wp-cli.phar export --path=/var/www/html --dir=/tmp/wpbackups"
      state=present

# copy wp backups to s3
  - cron: 
      name=copy_wp_backups
      minute=0 
      hour=23 
      weekday=2 
      job="aws s3 sync /tmp/wpbackups s3://ihiwpbackups/" 
      state=present

# add external efs mount to /etc/fstab file
  - lineinfile:
      dest: /etc/fstab
      regexp: '172.30.4.158'
      backrefs: no
      state: present
      line: "172.30.4.158:/ /externalfiles nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev 0 0"

  - file:
      path: /externalfiles
      state: directory

# mount the new volume in /etc/fstab
  - shell: mount -a

# add aws access key to wordpress
# roles won't work with plugin without premium support
  - lineinfile:
      dest: /var/www/html/wp-config.php
      regexp: 'DBI_AWS_ACCESS_KEY_ID'
      backrefs: no
      state: present
      line: "define( \"DBI_AWS_ACCESS_KEY_ID\", \"{{ lookup('env','AS3CF_KEY') }}\" );"

  - lineinfile:
      dest: /var/www/html/wp-config.php
      regexp: 'DBI_AWS_SECRET_ACCESS_KEY'
      backrefs: no
      state: present
      line: "define( \"DBI_AWS_SECRET_ACCESS_KEY\", \"{{ lookup('env','AS3CF_SECRET') }}\" );"

# add support for wp total cache
# need to further test this
  - lineinfile:
      dest: /var/www/html/wp-config.php
      regexp: "define('WP_CACHE', true);"
      backrefs: no
      state: present
      line: "define('WP_CACHE', true);"

# symlink to our EFS volume persistent files
  - file:
      src: /eternalfiles/files/
      dest: /var/www/html/files
      state: link
      force: yes


# precreate sitemap files
  - file:
      path: /var/www/html/sitemap.xml
      state: touch
      owner: apache

  - file:
      path: /var/www/html/sitemap.xml.gz
      state: touch
      owner: apache

  - file:
      path: /var/www/html/.htaccess
      state: touch
      owner: apache

# our pingdom test verifies web & db end-to-end working
  - lineinfile:
      dest: /var/www/html/a_simple_pingdom_test.php
      regexp: '^\$DB_HOST'
      backrefs: no
      state: present
      line: "$DB_HOST = \"{{ lookup('env','ihi_host') }}\"; "

  - lineinfile:
      dest: /var/www/html/a_simple_pingdom_test.php
      regexp: '^\$DB_USER'
      backrefs: no
      state: present
      line: "$DB_USERNAME = \"{{ lookup('env','ihi_user') }}\"; "

  - lineinfile:
      dest: /var/www/html/a_simple_pingdom_test.php
      regexp: '^\$DB_PASS'
      backrefs: no
      state: present
      line: "$DB_PASSWORD = \"{{ lookup('env','ihi_pass') }}\"; "


{
    "version": 3,
    "terraform_version": "0.7.3",
    "serial": 22,
    "lineage": "fcf9ccdf-b397-49b3-a8ea-4df221caabd8",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "aws_eip.example": {
                    "type": "aws_eip",
                    "depends_on": [],
                    "primary": {
                        "id": "eipalloc-57f9b961",
                        "attributes": {
                            "association_id": "eipassoc-070053be",
                            "domain": "vpc",
                            "id": "eipalloc-57f9b961",
                            "instance": "i-0ef12617d68826fdf",
                            "network_interface": "eni-a518c769",
                            "private_ip": "172.30.4.133",
                            "public_ip": "35.168.125.188",
                            "vpc": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_eip_association.eip_assoc": {
                    "type": "aws_eip_association",
                    "depends_on": [
                        "aws_eip.example",
                        "aws_instance.example"
                    ],
                    "primary": {
                        "id": "eipassoc-36db888f",
                        "attributes": {
                            "allocation_id": "eipalloc-57f9b961",
                            "id": "eipassoc-36db888f",
                            "instance_id": "i-0f9decb1ac3a975d6",
                            "network_interface_id": "eni-7d7ea4b1",
                            "private_ip_address": "172.30.4.111",
                            "public_ip": "35.168.125.188"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.example": {
                    "type": "aws_instance",
                    "depends_on": [],
                    "primary": {
                        "id": "i-0f9decb1ac3a975d6",
                        "attributes": {
                            "ami": "ami-c58c1dd3",
                            "availability_zone": "us-east-1e",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "My-New-EC2-S3-Role",
                            "id": "i-0f9decb1ac3a975d6",
                            "instance_state": "running",
                            "instance_type": "t2.small",
                            "key_name": "iheavy",
                            "monitoring": "false",
                            "network_interface_id": "eni-7d7ea4b1",
                            "private_dns": "ip-172-30-4-111.ec2.internal",
                            "private_ip": "172.30.4.111",
                            "public_dns": "ec2-52-55-149-67.compute-1.amazonaws.com",
                            "public_ip": "52.55.149.67",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "100",
                            "root_block_device.0.volume_size": "8",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-1f866434",
                            "tags.%": "1",
                            "tags.Name": "iheavy-iac",
                            "tenancy": "default",
                            "user_data": "231950c42f5c96501a3ce5641c1d0d57c6200e4a",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.2457389707": "sg-46f0f223"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.user_data": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "fc02fc551ee3a8715e4ee55166c89e1db9b37b2c39006dc0b73bb4a1393f176a",
                        "attributes": {
                            "id": "fc02fc551ee3a8715e4ee55166c89e1db9b37b2c39006dc0b73bb4a1393f176a",
                            "rendered": "#!/bin/sh\n\n# still working on the final list here\nyum update -y\nyum install emacs -y\nyum install mysql -y\nyum install php -y\nyum install git -y\nyum install aws-cli -y\nyum install gd -y\nyum install php-gd -y\nyum install ImageMagick -y\nyum install php-mysql -y\n\n\nyum install -y httpd24 \nservice httpd start\nchkconfig httpd on\n\n# install composer for php dependencies\nexport COMPOSER_HOME=/root\n\ncd /root\n\necho \"installing composer...\"\nwget https://getcomposer.org/installer\nmv installer composer-setup.php\nphp composer-setup.php\nmv composer.phar /usr/bin/composer\n\n# test composer install\nif ! [ -x \"$(command -v composer)\" ]; then\n  echo 'Error: composer is not installed.' \u003e\u00262\n  exit 1\nfi\n\n\n# fetch config files from private S3 folder\n# need to fetch from git\n#aws s3 cp s3://iheavy-config/iheavy_files.zip .\nexport HOME=/root\ngit config --global credential.UseHttpPath true\ngit config --global credential.helper '!aws codecommit credential-helper $@'\ngit clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/iheavy\ncd iheavy\n\n# unzip files\n#unzip iheavy_files.zip \n\n# use composer to get wordpress \u0026 plugins\n/usr/bin/composer update\n\n# check for existing wordpress \u0026 wp-content folders??\n\n# move wordpress software\nmv wordpress/* /var/www/html/\n\n# move plugins\nmv wp-content/plugins/* /var/www/html/wp-content/plugins/\n\n# move pingdom test\nmv a_simple_pingdom_test.php /var/www/html\n\n# move htaccess\nmv htaccess /var/www/html/.htaccess\n\n# move httpd.conf\nmv iheavy_httpd.conf /etc/httpd/conf.d\n\n# move our wp-config into place\n#mv wp-config.php /var/www/html\n# build the wp-config.php file\ncat \u003c\u003cEOF \u003e /var/www/html/wp-config.php\n\u003c?php\n\ndefine('DB_NAME', 'ihi361_new');\ndefine('DB_USER', \"root\");\ndefine('DB_PASSWORD', \"sean9999\");\ndefine('DB_HOST', \"ihi-rds.ckiwwtljakfu.us-east-1.rds.amazonaws.com\");\ndefine('DB_CHARSET', 'utf8');\ndefine('DB_COLLATE', '');\n\n\n\\$table_prefix = 'ihi361_';\n\ndefine('WP_DEBUG', false);\n\nif ( !defined('ABSPATH') )\ndefine('ABSPATH', dirname(__FILE__) . '/');\n\nrequire_once(ABSPATH . 'wp-settings.php');\nEOF\n\n# restart apache\nservice httpd restart\n\n# allow apache to create uploads \u0026 any files inside wp-content\nchown -R apache /var/www/html/wp-content\n\n# mount EFS for external /homedirs!\nmount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 172.30.4.158:/ efs\n\n",
                            "template": "#!/bin/sh\n\n# still working on the final list here\nyum update -y\nyum install emacs -y\nyum install mysql -y\nyum install php -y\nyum install git -y\nyum install aws-cli -y\nyum install gd -y\nyum install php-gd -y\nyum install ImageMagick -y\nyum install php-mysql -y\n\n\nyum install -y httpd24 \nservice httpd start\nchkconfig httpd on\n\n# install composer for php dependencies\nexport COMPOSER_HOME=/root\n\ncd /root\n\necho \"installing composer...\"\nwget https://getcomposer.org/installer\nmv installer composer-setup.php\nphp composer-setup.php\nmv composer.phar /usr/bin/composer\n\n# test composer install\nif ! [ -x \"$(command -v composer)\" ]; then\n  echo 'Error: composer is not installed.' \u003e\u00262\n  exit 1\nfi\n\n\n# fetch config files from private S3 folder\n# need to fetch from git\n#aws s3 cp s3://iheavy-config/iheavy_files.zip .\nexport HOME=/root\ngit config --global credential.UseHttpPath true\ngit config --global credential.helper '!aws codecommit credential-helper $@'\ngit clone https://git-codecommit.us-east-1.amazonaws.com/v1/repos/iheavy\ncd iheavy\n\n# unzip files\n#unzip iheavy_files.zip \n\n# use composer to get wordpress \u0026 plugins\n/usr/bin/composer update\n\n# check for existing wordpress \u0026 wp-content folders??\n\n# move wordpress software\nmv wordpress/* /var/www/html/\n\n# move plugins\nmv wp-content/plugins/* /var/www/html/wp-content/plugins/\n\n# move pingdom test\nmv a_simple_pingdom_test.php /var/www/html\n\n# move htaccess\nmv htaccess /var/www/html/.htaccess\n\n# move httpd.conf\nmv iheavy_httpd.conf /etc/httpd/conf.d\n\n# move our wp-config into place\n#mv wp-config.php /var/www/html\n# build the wp-config.php file\ncat \u003c\u003cEOF \u003e /var/www/html/wp-config.php\n\u003c?php\n\ndefine('DB_NAME', 'ihi361_new');\ndefine('DB_USER', \"${mysql_user}\");\ndefine('DB_PASSWORD', \"${mysql_pass}\");\ndefine('DB_HOST', \"${mysql_host}\");\ndefine('DB_CHARSET', 'utf8');\ndefine('DB_COLLATE', '');\n\n\n\\$table_prefix = 'ihi361_';\n\ndefine('WP_DEBUG', false);\n\nif ( !defined('ABSPATH') )\ndefine('ABSPATH', dirname(__FILE__) . '/');\n\nrequire_once(ABSPATH . 'wp-settings.php');\nEOF\n\n# restart apache\nservice httpd restart\n\n# allow apache to create uploads \u0026 any files inside wp-content\nchown -R apache /var/www/html/wp-content\n\n# mount EFS for external /homedirs!\nmount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 172.30.4.158:/ efs\n\n",
                            "vars.%": "3",
                            "vars.mysql_host": "ihi-rds.ckiwwtljakfu.us-east-1.rds.amazonaws.com",
                            "vars.mysql_pass": "sean9999",
                            "vars.mysql_user": "root"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
